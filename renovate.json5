{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    // Use the best-practices preset. Adds options to pin dependencies.
    // https://docs.renovatebot.com/upgrade-best-practices/#whats-in-the-configbest-practices-preset
    "config:best-practices",

    // Update dependencies monthly
    "schedule:monthly",

    // Add DCO sign-off
    ":gitSignOff",

    // Add Aqua present to allow updating CLI tools.
    // https://aquaproj.github.io/docs/guides/renovate/
    "github>aquaproj/aqua-renovate-config#2.9.0",

    // Update version numbers in Makefile.
    // https://docs.renovatebot.com/presets-customManagers/#custommanagersmakefileversions
    "customManagers:makefileVersions",
  ],
  // NOTE: Set the prHourlyLimit to 0 to disable the hourly limit. This is done
  // because we are using a monthly schedule and the default hourly limit of 2
  // would cause Renovate to only create 2 PRs every month.
  prHourlyLimit: 0,

  // Security alerts/updates happen more frequently.
  vulnerabilityAlerts: {
    enabled: true,
    schedule: "* 0-4 * * *",
  },
  osvVulnerabilityAlerts: true,

  // Create a new issue for each config warning. By default, Renovate re-opens
  // an existing issue which can be very old and is easily missed. Opening new
  // issues is more intuitive.
  configWarningReuseIssue: false,

  customManagers: [
    {
      customType: "regex",
      managerFilePatterns: [
        "/(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$/",
        "/(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$/",
      ],
      matchStrings: [
        '#\\s*renovate:\\s*?(suite=(?<suite>.*?))?\\s*depName=(?<depName>.*?)?\\sENV .*?_VERSION="(?<currentValue>.*)"',
      ],
      registryUrlTemplate: "https://deb.debian.org/debian?suite={{#if suite }}{{suite}}{{else}}stable{{/if}}&components=main,contrib,non-free&binaryArch=amd64",
      datasourceTemplate: "deb",
    },
    {
      customType: "regex",
      managerFilePatterns: [
        "/(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$/",
        "/(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$/",
      ],
      matchStrings: [
        "# renovate: datasource=(?<datasource>[a-zA-Z0-9-._]+?) depName=(?<depName>[^\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\s]+?))?(?: versioning=(?<versioning>[^\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\s]+?))?\\s(?:ENV|ARG)\\s+[A-Za-z0-9_]+?_VERSION[ =][\"']?(?<currentValue>.+?)[\"']?\\s(?:ENV|ARG)\\s+[A-Za-z0-9_]+?_DIGEST[ =][\"']?(?<currentDigest>.+?)[\"']?\\s",
      ],
    },
  ],

  // Group various ecosystem updates. Security updates are always separate.
  packageRules: [
    {
      groupName: "aqua",
      matchFileNames: [".aqua.yaml", ".aqua-checksums.yaml"],
      matchUpdateTypes: ["minor", "patch"],
    },
    {
      groupName: "makefile",
      matchFileNames: ["Makefile"],
      matchUpdateTypes: ["minor", "patch"],
    },
    {
      groupName: "github-actions",
      matchManagers: ["github-actions"],
      matchPackageNames: ["!slsa-framework/slsa-github-generator"],
      matchUpdateTypes: ["minor", "patch"],
      pinDigests: true,
    },
    {
      groupName: "github-actions",
      matchManagers: ["github-actions"],
      matchPackageNames: ["slsa-framework/slsa-github-generator"],
      pinDigests: false,
    },
    {
      groupName: "python",
      matchManagers: ["pip_requirements"],
      matchUpdateTypes: ["minor", "patch"],
    },
    {
      groupName: "npm dev",
      matchDepTypes: ["devDependencies"],
      matchManagers: ["npm"],
    },
    {
      groupName: "npm",
      matchDepTypes: ["dependencies"],
      matchManagers: ["npm"],
      matchUpdateTypes: ["minor", "patch"],
      schedule: ["at any time"],
    },
    {
      groupName: "dockerfile",
      matchFileNames: ["/(^|/|\\.)([Dd]ocker|[Cc]ontainer)file$/"],
      matchUpdateTypes: ["minor", "patch"],
      schedule: ["at any time"],
    },
  ],
}
